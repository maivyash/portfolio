{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gupta\\\\Desktop\\\\Projects\\\\portfolio\\\\src\\\\tools\\\\Background.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LetterGlitch = ({\n  children,\n  glitchColors = [\"#2b4539\", \"#61dca3\", \"#61b3dc\"],\n  className = \"\",\n  glitchSpeed = 50,\n  centerVignette = false,\n  outerVignette = true,\n  smooth = true\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const letters = useRef([]);\n  const grid = useRef({\n    columns: 0,\n    rows: 0\n  });\n  const context = useRef(null);\n  const lastGlitchTime = useRef(Date.now());\n  const fontSize = 16;\n  const charWidth = 10;\n  const charHeight = 20;\n  const lettersAndSymbols = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"!\", \"@\", \"#\", \"$\", \"&\", \"*\", \"(\", \")\", \"-\", \"_\", \"+\", \"=\", \"/\", \"[\", \"]\", \"{\", \"}\", \";\", \":\", \"<\", \">\", \",\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n  const getRandomChar = () => {\n    return lettersAndSymbols[Math.floor(Math.random() * lettersAndSymbols.length)];\n  };\n  const getRandomColor = () => {\n    return glitchColors[Math.floor(Math.random() * glitchColors.length)];\n  };\n  const hexToRgb = hex => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n      return r + r + g + g + b + b;\n    });\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  };\n  const interpolateColor = (start, end, factor) => {\n    const result = {\n      r: Math.round(start.r + (end.r - start.r) * factor),\n      g: Math.round(start.g + (end.g - start.g) * factor),\n      b: Math.round(start.b + (end.b - start.b) * factor)\n    };\n    return `rgb(${result.r}, ${result.g}, ${result.b})`;\n  };\n  const calculateGrid = (width, height) => {\n    const columns = Math.ceil(width / charWidth);\n    const rows = Math.ceil(height / charHeight);\n    return {\n      columns,\n      rows\n    };\n  };\n  const initializeLetters = (columns, rows) => {\n    grid.current = {\n      columns,\n      rows\n    };\n    const totalLetters = columns * rows;\n    letters.current = Array.from({\n      length: totalLetters\n    }, () => ({\n      char: getRandomChar(),\n      color: getRandomColor(),\n      targetColor: getRandomColor(),\n      colorProgress: 1\n    }));\n  };\n  const resizeCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const parent = canvas.parentElement;\n    if (!parent) return;\n    const dpr = window.devicePixelRatio || 1;\n    const rect = parent.getBoundingClientRect();\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    canvas.style.width = `${rect.width}px`;\n    canvas.style.height = `${rect.height}px`;\n    if (context.current) {\n      context.current.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n    const {\n      columns,\n      rows\n    } = calculateGrid(rect.width, rect.height);\n    initializeLetters(columns, rows);\n    drawLetters();\n  };\n  const drawLetters = () => {\n    if (!context.current || letters.current.length === 0) return;\n    const ctx = context.current;\n    const {\n      width,\n      height\n    } = canvasRef.current.getBoundingClientRect();\n    ctx.clearRect(0, 0, width, height);\n    ctx.font = `${fontSize}px monospace`;\n    ctx.textBaseline = \"top\";\n    letters.current.forEach((letter, index) => {\n      const x = index % grid.current.columns * charWidth;\n      const y = Math.floor(index / grid.current.columns) * charHeight;\n      ctx.fillStyle = letter.color;\n      ctx.fillText(letter.char, x, y);\n    });\n  };\n  const updateLetters = () => {\n    if (!letters.current || letters.current.length === 0) return;\n    const updateCount = Math.max(1, Math.floor(letters.current.length * 0.05));\n    for (let i = 0; i < updateCount; i++) {\n      const index = Math.floor(Math.random() * letters.current.length);\n      if (!letters.current[index]) continue;\n      letters.current[index].char = getRandomChar();\n      letters.current[index].targetColor = getRandomColor();\n      if (!smooth) {\n        letters.current[index].color = letters.current[index].targetColor;\n        letters.current[index].colorProgress = 1;\n      } else {\n        letters.current[index].colorProgress = 0;\n      }\n    }\n  };\n  const handleSmoothTransitions = () => {\n    let needsRedraw = false;\n    letters.current.forEach(letter => {\n      if (letter.colorProgress < 1) {\n        letter.colorProgress += 0.05;\n        if (letter.colorProgress > 1) letter.colorProgress = 1;\n        const startRgb = hexToRgb(letter.color);\n        const endRgb = hexToRgb(letter.targetColor);\n        if (startRgb && endRgb) {\n          letter.color = interpolateColor(startRgb, endRgb, letter.colorProgress);\n          needsRedraw = true;\n        }\n      }\n    });\n    if (needsRedraw) {\n      drawLetters();\n    }\n  };\n  const animate = () => {\n    const now = Date.now();\n    if (now - lastGlitchTime.current >= glitchSpeed) {\n      updateLetters();\n      drawLetters();\n      lastGlitchTime.current = now;\n    }\n    if (smooth) {\n      handleSmoothTransitions();\n    }\n    animationRef.current = requestAnimationFrame(animate);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    context.current = canvas.getContext(\"2d\");\n    resizeCanvas();\n    animate();\n    let resizeTimeout;\n    const handleResize = () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        cancelAnimationFrame(animationRef.current);\n        resizeCanvas();\n        animate();\n      }, 100);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n      window.removeEventListener(\"resize\", handleResize);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [glitchSpeed, smooth]);\n  const containerStyle = {\n    position: \"fixed\",\n    // ✅ stays in place\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 0,\n    // ✅ stays behind everything\n    pointerEvents: \"none\",\n    backgroundColor: \"#000\"\n  };\n  const canvasStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    opacity: 0.2 // ✅ lower opacity\n  };\n  const outerVignetteStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    pointerEvents: \"none\",\n    background: \"radial-gradient(circle, rgba(0,0,0,0) 60%, rgba(0,0,0,1) 100%)\"\n  };\n  const centerVignetteStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    pointerEvents: \"none\",\n    background: \"radial-gradient(circle, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 60%)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: canvasStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), outerVignette && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: outerVignetteStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }, this), centerVignette && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: centerVignetteStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(LetterGlitch, \"SMt+CysrOpczTIiRFdGkjgwFpGU=\");\n_c = LetterGlitch;\nexport default LetterGlitch;\nvar _c;\n$RefreshReg$(_c, \"LetterGlitch\");","map":{"version":3,"names":["useRef","useEffect","jsxDEV","_jsxDEV","LetterGlitch","children","glitchColors","className","glitchSpeed","centerVignette","outerVignette","smooth","_s","canvasRef","animationRef","letters","grid","columns","rows","context","lastGlitchTime","Date","now","fontSize","charWidth","charHeight","lettersAndSymbols","getRandomChar","Math","floor","random","length","getRandomColor","hexToRgb","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","interpolateColor","start","end","factor","round","calculateGrid","width","height","ceil","initializeLetters","current","totalLetters","Array","from","char","color","targetColor","colorProgress","resizeCanvas","canvas","parent","parentElement","dpr","window","devicePixelRatio","rect","getBoundingClientRect","style","setTransform","drawLetters","ctx","clearRect","font","textBaseline","forEach","letter","index","x","y","fillStyle","fillText","updateLetters","updateCount","max","i","handleSmoothTransitions","needsRedraw","startRgb","endRgb","animate","requestAnimationFrame","getContext","resizeTimeout","handleResize","clearTimeout","setTimeout","cancelAnimationFrame","addEventListener","removeEventListener","containerStyle","position","top","left","zIndex","pointerEvents","backgroundColor","canvasStyle","opacity","outerVignetteStyle","background","centerVignetteStyle","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gupta/Desktop/Projects/portfolio/src/tools/Background.jsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\r\n\r\nconst LetterGlitch = ({\r\n  children,\r\n  glitchColors = [\"#2b4539\", \"#61dca3\", \"#61b3dc\"],\r\n  className = \"\",\r\n  glitchSpeed = 50,\r\n  centerVignette = false,\r\n  outerVignette = true,\r\n  smooth = true,\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n  const letters = useRef([]);\r\n  const grid = useRef({ columns: 0, rows: 0 });\r\n  const context = useRef(null);\r\n  const lastGlitchTime = useRef(Date.now());\r\n\r\n  const fontSize = 16;\r\n  const charWidth = 10;\r\n  const charHeight = 20;\r\n\r\n  const lettersAndSymbols = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n    \"!\",\r\n    \"@\",\r\n    \"#\",\r\n    \"$\",\r\n    \"&\",\r\n    \"*\",\r\n    \"(\",\r\n    \")\",\r\n    \"-\",\r\n    \"_\",\r\n    \"+\",\r\n    \"=\",\r\n    \"/\",\r\n    \"[\",\r\n    \"]\",\r\n    \"{\",\r\n    \"}\",\r\n    \";\",\r\n    \":\",\r\n    \"<\",\r\n    \">\",\r\n    \",\",\r\n    \"0\",\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n  ];\r\n\r\n  const getRandomChar = () => {\r\n    return lettersAndSymbols[\r\n      Math.floor(Math.random() * lettersAndSymbols.length)\r\n    ];\r\n  };\r\n\r\n  const getRandomColor = () => {\r\n    return glitchColors[Math.floor(Math.random() * glitchColors.length)];\r\n  };\r\n\r\n  const hexToRgb = (hex) => {\r\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => {\r\n      return r + r + g + g + b + b;\r\n    });\r\n\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16),\r\n        }\r\n      : null;\r\n  };\r\n\r\n  const interpolateColor = (start, end, factor) => {\r\n    const result = {\r\n      r: Math.round(start.r + (end.r - start.r) * factor),\r\n      g: Math.round(start.g + (end.g - start.g) * factor),\r\n      b: Math.round(start.b + (end.b - start.b) * factor),\r\n    };\r\n    return `rgb(${result.r}, ${result.g}, ${result.b})`;\r\n  };\r\n\r\n  const calculateGrid = (width, height) => {\r\n    const columns = Math.ceil(width / charWidth);\r\n    const rows = Math.ceil(height / charHeight);\r\n    return { columns, rows };\r\n  };\r\n\r\n  const initializeLetters = (columns, rows) => {\r\n    grid.current = { columns, rows };\r\n    const totalLetters = columns * rows;\r\n    letters.current = Array.from({ length: totalLetters }, () => ({\r\n      char: getRandomChar(),\r\n      color: getRandomColor(),\r\n      targetColor: getRandomColor(),\r\n      colorProgress: 1,\r\n    }));\r\n  };\r\n\r\n  const resizeCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const parent = canvas.parentElement;\r\n    if (!parent) return;\r\n\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const rect = parent.getBoundingClientRect();\r\n\r\n    canvas.width = rect.width * dpr;\r\n    canvas.height = rect.height * dpr;\r\n\r\n    canvas.style.width = `${rect.width}px`;\r\n    canvas.style.height = `${rect.height}px`;\r\n\r\n    if (context.current) {\r\n      context.current.setTransform(dpr, 0, 0, dpr, 0, 0);\r\n    }\r\n\r\n    const { columns, rows } = calculateGrid(rect.width, rect.height);\r\n    initializeLetters(columns, rows);\r\n\r\n    drawLetters();\r\n  };\r\n\r\n  const drawLetters = () => {\r\n    if (!context.current || letters.current.length === 0) return;\r\n    const ctx = context.current;\r\n    const { width, height } = canvasRef.current.getBoundingClientRect();\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.font = `${fontSize}px monospace`;\r\n    ctx.textBaseline = \"top\";\r\n\r\n    letters.current.forEach((letter, index) => {\r\n      const x = (index % grid.current.columns) * charWidth;\r\n      const y = Math.floor(index / grid.current.columns) * charHeight;\r\n      ctx.fillStyle = letter.color;\r\n      ctx.fillText(letter.char, x, y);\r\n    });\r\n  };\r\n\r\n  const updateLetters = () => {\r\n    if (!letters.current || letters.current.length === 0) return;\r\n\r\n    const updateCount = Math.max(1, Math.floor(letters.current.length * 0.05));\r\n\r\n    for (let i = 0; i < updateCount; i++) {\r\n      const index = Math.floor(Math.random() * letters.current.length);\r\n      if (!letters.current[index]) continue;\r\n\r\n      letters.current[index].char = getRandomChar();\r\n      letters.current[index].targetColor = getRandomColor();\r\n\r\n      if (!smooth) {\r\n        letters.current[index].color = letters.current[index].targetColor;\r\n        letters.current[index].colorProgress = 1;\r\n      } else {\r\n        letters.current[index].colorProgress = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSmoothTransitions = () => {\r\n    let needsRedraw = false;\r\n    letters.current.forEach((letter) => {\r\n      if (letter.colorProgress < 1) {\r\n        letter.colorProgress += 0.05;\r\n        if (letter.colorProgress > 1) letter.colorProgress = 1;\r\n\r\n        const startRgb = hexToRgb(letter.color);\r\n        const endRgb = hexToRgb(letter.targetColor);\r\n        if (startRgb && endRgb) {\r\n          letter.color = interpolateColor(\r\n            startRgb,\r\n            endRgb,\r\n            letter.colorProgress\r\n          );\r\n          needsRedraw = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (needsRedraw) {\r\n      drawLetters();\r\n    }\r\n  };\r\n\r\n  const animate = () => {\r\n    const now = Date.now();\r\n    if (now - lastGlitchTime.current >= glitchSpeed) {\r\n      updateLetters();\r\n      drawLetters();\r\n      lastGlitchTime.current = now;\r\n    }\r\n\r\n    if (smooth) {\r\n      handleSmoothTransitions();\r\n    }\r\n\r\n    animationRef.current = requestAnimationFrame(animate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    context.current = canvas.getContext(\"2d\");\r\n    resizeCanvas();\r\n    animate();\r\n\r\n    let resizeTimeout;\r\n\r\n    const handleResize = () => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        cancelAnimationFrame(animationRef.current);\r\n        resizeCanvas();\r\n        animate();\r\n      }, 100);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationRef.current);\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [glitchSpeed, smooth]);\r\n\r\n  const containerStyle = {\r\n    position: \"fixed\", // ✅ stays in place\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: 0, // ✅ stays behind everything\r\n    pointerEvents: \"none\",\r\n    backgroundColor: \"#000\",\r\n  };\r\n\r\n  const canvasStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    opacity: 0.2, // ✅ lower opacity\r\n  };\r\n\r\n  const outerVignetteStyle = {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    pointerEvents: \"none\",\r\n    background:\r\n      \"radial-gradient(circle, rgba(0,0,0,0) 60%, rgba(0,0,0,1) 100%)\",\r\n  };\r\n\r\n  const centerVignetteStyle = {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    pointerEvents: \"none\",\r\n    background:\r\n      \"radial-gradient(circle, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 60%)\",\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle} className={className}>\r\n      <canvas ref={canvasRef} style={canvasStyle} />\r\n      {outerVignette && <div style={outerVignetteStyle}></div>}\r\n      {centerVignette && <div style={centerVignetteStyle}></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterGlitch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}